// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ResourceGroupLimit {
    /// preserve for other limit.
    #[prost(int32, tag = "1")]
    pub node_num: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ResourceGroupTransfer {
    /// resource groups can be transfered with current resource group.
    #[prost(string, tag = "1")]
    pub resource_group: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ResourceGroupNodeFilter {
    /// node in resource group must match node labels requirements
    #[prost(message, repeated, tag = "1")]
    pub node_labels: ::prost::alloc::vec::Vec<super::common::KeyValuePair>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ResourceGroupConfig {
    /// requests node num in resource group, if node num is less than requests.nodeNum, it will be transfer from other resource group.
    #[prost(message, optional, tag = "1")]
    pub requests: ::core::option::Option<ResourceGroupLimit>,
    /// limited node num in resource group, if node num is more than limits.nodeNum, it will be transfer to other resource group.
    #[prost(message, optional, tag = "2")]
    pub limits: ::core::option::Option<ResourceGroupLimit>,
    /// missing node should be transfer from given resource group at high priority in repeated list.
    #[prost(message, repeated, tag = "3")]
    pub transfer_from: ::prost::alloc::vec::Vec<ResourceGroupTransfer>,
    /// redundant node should be transfer to given resource group at high priority in repeated list.
    #[prost(message, repeated, tag = "4")]
    pub transfer_to: ::prost::alloc::vec::Vec<ResourceGroupTransfer>,
    /// node in resource group must match node filters
    #[prost(message, optional, tag = "5")]
    pub node_filter: ::core::option::Option<ResourceGroupNodeFilter>,
}
